{"openapi":"3.0.0","info":{"title":"Floraccess API","version":"2.0.0","description":"API documentation"},"servers":[{"url":"http://0.0.0.0:3000"}],"paths":{"/code/login/request":{"post":{"tags":["Code","Login"],"summary":"Request login","description":"Request a login by providing an email address. An code will be sent to the provided email address.","parameters":[{"in":"body","schema":{"type":"object","required":["email","name"],"properties":{"email":{"type":"string","format":"email","description":"The email address to which the login code will be sent","example":"john.doe@mail.com"},"name":{"type":"string","description":"The name of the user requesting login","example":"John Doe"}}}}],"responses":{"200":{"description":"email sent successfully"},"400":{"description":"Bad request. Change your request to fix this error","content":{"application/json":{"schema":{"$ref":"#components/schemas/error400"}}}},"500":{"description":"Internal server error. Please create an issue on Github","content":{"application/json":{"schema":{"$ref":"#components/schemas/error500"}}}}}}},"/code/login/confirm":{"post":{"tags":["Code","Login"],"summary":"Confirm login","description":"Confirm a login by providing the email address and the code sent to that address.","parameters":[{"in":"body","schema":{"type":"object","required":["email","code"],"properties":{"email":{"type":"string","format":"email","description":"The email address to which the login code was sent","example":"john.doe@mail.com"},"code":{"type":"string","description":"The login code sent to the email address","example":"ABC123"}}}}],"responses":{"200":{"description":"User logged out successfully","content":{"application/json":{"schema":{"type":"object","required":["jwt"],"properties":{"jwt":{"type":"string","description":"Crypted JWT for user authentication","example":"ABCDEF"}}}}}},"400":{"description":"Bad request. Change your request to fix this error","content":{"application/json":{"schema":{"$ref":"#components/schemas/error400"}}}},"401":{"description":"Unauthorized. Invalid or missing JWT token","content":{"application/json":{"schema":{"$ref":"#components/schemas/error401"}}}},"500":{"description":"Internal server error. Please create an issue on Github","content":{"application/json":{"schema":{"$ref":"#components/schemas/error500"}}}}}}},"/jwt/user":{"get":{"tags":["API routes"],"summary":"Get user information from JWT","description":"Retrieve information about the authenticated user.","parameters":[{"in":"header","name":"Authorization","required":true,"description":"API_name api_token","schema":{"type":"string","example":"FlorAccess abc123token"}},{"in":"query","name":"jwt","required":true,"description":"JWT token for user authentication","schema":{"type":"string","example":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."}}],"responses":{"200":{"description":"User information retrieved successfully.","content":{"application/json":{"schema":{"type":"object","properties":{"userid":{"type":"integer","example":1},"email":{"type":"string","example":"user@example.com"},"name":{"type":"string","example":"John Doe"},"authmethod":{"type":"string","example":"password"}}}}}},"401":{"description":"Unauthorized access."},"422":{"description":"Invalid request parameters."},"500":{"description":"Internal server error."}}}},"/token/send-token":{"post":{"tags":["Token"],"summary":"Send a new authentication token to the email address","description":"Generate, save and send a new authentication token to the email address passed in the request body","parameters":[{"in":"body","schema":{"type":"object","required":["email"],"properties":{"email":{"type":"string","format":"email","description":"The email address to which the authentication token will be sent"},"app_name":{"type":"string","description":"The name of the application to be used in the email subject"}}}}],"responses":{"200":{"description":"Token sent successfully","content":{"application/json":{"schema":{"type":"object","required":["message"],"properties":{"message":{"type":"string","example":"Token sent successfully"}}}}}},"400":{"description":"Bad request. Change your request to fix this error","content":{"application/json":{"schema":{"$ref":"#components/schemas/error400"}}}},"500":{"description":"Internal server error. Please create an issue on Github","content":{"application/json":{"schema":{"$ref":"#components/schemas/error500"}}}}}}},"/token/login":{"post":{"tags":["Token"],"summary":"Get JWT with email and token","description":"Generate a JWT using the email address and the authentication token sent to the user's email address.","parameters":[{"in":"body","schema":{"type":"object","required":["email","token"],"properties":{"email":{"type":"string","format":"email","description":"The email address to which the authentication token will be sent","example":"john.doe@mail.com"},"token":{"type":"string","description":"The authentication token sent to the user's email address"}}}}],"responses":{"200":{"description":"JWT generated and sent successfully","content":{"application/json":{"schema":{"$ref":"#components/schemas/jwtResponse"}}}},"400":{"description":"Bad request. Change your request to fix this error","content":{"application/json":{"schema":{"$ref":"#components/schemas/error400"}}}},"500":{"description":"Internal server error. Please create an issue on Github","content":{"application/json":{"schema":{"$ref":"#components/schemas/error500"}}}}}}},"/user/logout":{"post":{"tags":["User"],"summary":"Logout a user","description":"Logout a user by invalidating the authentication token.","parameters":[{"in":"headers","name":"Authorization","required":true,"description":"JWT token for user authentication","schema":{"type":"string","example":"Bearer your_jwt_token_here"}}],"responses":{"200":{"description":"User logged out successfully"},"400":{"description":"Bad request. Change your request to fix this error","content":{"application/json":{"schema":{"$ref":"#components/schemas/error400"}}}},"401":{"description":"Unauthorized. Invalid or missing JWT token","content":{"application/json":{"schema":{"$ref":"#components/schemas/error401"}}}},"500":{"description":"Internal server error. Please create an issue on Github","content":{"application/json":{"schema":{"$ref":"#components/schemas/error500"}}}}}}},"/user/register":{"post":{"tags":["User"],"summary":"Register a new user","description":"Register a new user by providing an email address and name. An authentication token will be sent to the provided email address.","parameters":[{"in":"body","schema":{"type":"object","required":["email"],"properties":{"email":{"type":"string","format":"email","description":"The email address to which the authentication token will be sent","example":"john.doe@mail.com"},"name":{"type":"string","description":"The name of the user","example":"John Doe"}}}}],"responses":{"200":{"description":"User registered successfully","content":{"application/json":{"schema":{"type":"object","required":["jwt"],"properties":{"jwt":{"type":"string","description":"JWT for user authentication","example":"algo.payload.sign"}}}}}},"400":{"description":"Bad request. Change your request to fix this error","content":{"application/json":{"schema":{"$ref":"#components/schemas/error400"}}}},"500":{"description":"Internal server error. Please create an issue on Github","content":{"application/json":{"schema":{"$ref":"#components/schemas/error500"}}}}}}},"/user":{"put":{"tags":["User"],"summary":"Update user information","description":"Update the information of an existing user.","parameters":[{"in":"headers","name":"Authorization","required":true,"description":"JWT token for user authentication","schema":{"type":"string","example":"Bearer your_jwt_token_here"}},{"in":"body","name":"user","required":true,"description":"The user information to update","schema":{"type":"object","properties":{"email":{"type":"string","format":"email","example":"john.doe@mail.com"},"name":{"type":"string","example":"John Doe"}}}}],"responses":{"200":{"description":"User updated successfully","content":{"application/json":{"schema":{"type":"object","required":["updated"],"properties":{"updated":{"type":"boolean","description":"Indicates if the user was updated (true) or not (false)","example":true},"jwt":{"type":"string","description":"New JWT for user authentication after update (only if updated is true)","example":"new_algo.new_payload.new_sign"}}}}}},"400":{"description":"Bad request. Change your request to fix this error","content":{"application/json":{"schema":{"$ref":"#components/schemas/error400"}}}},"500":{"description":"Internal server error. Please create an issue on Github","content":{"application/json":{"schema":{"$ref":"#components/schemas/error500"}}}}}},"delete":{"tags":["User"],"summary":"Delete user by Id","description":"Delete the user associated with the provided Id. Provide the user Id in the JWT token.","parameters":[{"in":"headers","name":"Authorization","required":true,"description":"JWT token for user authentication","schema":{"type":"string","example":"Bearer your_jwt_token_here"}}],"responses":{"200":{"description":"User deleted successfully","content":{"application/json":{"schema":{"type":"object","required":["message"],"properties":{"message":{"type":"string","description":"Confirmation message for successful deletion","example":"User deleted successfully."}}}}}},"400":{"description":"Bad request. Change your request to fix this error","content":{"application/json":{"schema":{"$ref":"#components/schemas/error400"}}}},"500":{"description":"Internal server error. Please create an issue on Github","content":{"application/json":{"schema":{"$ref":"#components/schemas/error500"}}}}}}}},"components":{"schemas":{"error400":{"type":"object","required":["error"],"properties":{"error":{"type":"string","example":"Invalid email address"}}},"error500":{"type":"object","required":["error"],"properties":{"error":{"type":"string","example":"Internal server error"}}},"messageResponse":{"type":"object","required":["message"],"properties":{"message":{"type":"string","example":"User registered successfully"}}},"jwtResponse":{"type":"object","required":["jwt"],"properties":{"jwt":{"type":"string"}}}}},"tags":[]}